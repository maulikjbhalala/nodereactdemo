{"version":3,"sources":["components/compo1.js","components/compo2.js","components/comp-1.js"],"names":["Compo1","props","state","isError","errMsg","err","info","console","log","toString","componentStack","this","children","error","React","Component","compo2","data","Error","TodoApp","emps","currentPage","dataPerPage","handleClick","bind","event","setState","Number","target","id","Axios","get","then","result","indexOfLastTodo","indexOfFirstTodo","renderTodos","slice","map","emp","index","className","padding","class","style","color","key","_id","empName","empEmail","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","onClick"],"mappings":"yOAgDeA,E,kDA1CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACRC,SAAQ,EACRC,OAAO,IALG,E,8DAeDC,EAAIC,GAOlBC,QAAQC,IAAIH,EAAII,WAAYH,EAAKI,kB,+BAOjC,OAAGC,KAAKT,MAAME,OAGH,6BACH,gDAGDO,KAAKV,MAAMW,Y,gDA1BUC,GAC5B,MAAO,CAACT,OAAQS,EAAMJ,gB,GAbTK,IAAMC,WCsBZC,E,kDAtBV,WAAYf,GAAQ,uCACVA,G,qDAMP,GAAqB,WAAlBU,KAAKV,MAAMgB,KAET,MAAM,IAAIC,MAAM,mBAGrB,OACI,8CACmBP,KAAKV,MAAMgB,U,GAfpBF,aCIZI,E,kDACJ,aAAe,IAAD,8BACZ,gBACKjB,MAAQ,CACXkB,KAAM,GACNC,YAAa,EACbC,YAAa,GAEf,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPP,E,wDAUFC,GACVd,KAAKe,SAAS,CACZL,YAAaM,OAAOF,EAAMG,OAAOC,Q,2CAMpC,IAAD,OACEC,IAAMC,IAAI,8BAA8BC,MAAK,SAACC,GAG1C,EAAKP,SACD,CACIN,KAAMa,EAAOhB,Y,+BAgDzB,IAzCQ,IAAD,SACoCN,KAAKT,MAAxCkB,EADD,EACCA,KAAMC,EADP,EACOA,YAAaC,EADpB,EACoBA,YAErBY,EAAkBb,EAAcC,EAChCa,EAAmBD,EAAkBZ,EAGrCc,EAFehB,EAAKiB,MAAMF,EAAkBD,GAEjBI,KAAI,SAACC,EAAKC,GAGzC,OAAS,yBAAKC,UAAU,aAE9B,yBAAKA,UAAU,uBAEP,8BAGA,yBAAKA,UAAU,cACX,2BAAOC,QAAQ,IAAIC,MAAM,sBACrB,+BACI,wBAAIC,MAAO,CAAEC,MAAO,eAChB,wCACA,0CAEJ,6BAEJ,+BACQ,wBAAID,MAAO,CAAEC,MAAO,SAAWC,IAAKP,EAAIQ,KACpC,4BAAKR,EAAIS,SACT,4BAAMT,EAAIU,mBAW5BC,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKjC,EAAKkC,OAAShC,GAAc6B,IACzDD,EAAYK,KAAKJ,GAGnB,IAAMK,EAAoBN,EAAYZ,KAAI,SAAAmB,GACxC,OACE,4BACEX,IAAKW,EACL5B,GAAI4B,EACJC,QAAS,EAAKnC,aAEbkC,EACD,iCAKN,OACE,6BACE,4BACGrB,GAEH,wBAAIP,GAAG,gBACJ2B,GAEH,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAOvC,KAAK,aAGZ,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAOA,KAAK,iB,GAvGEH,IAAMC,WAuHbI","file":"static/js/6.315ab1b5.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nclass Compo1 extends React.Component\n{\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             isError:false,\n             errMsg:''\n        }\n    }\n\n\n    static getDerivedStateFromError(error) {\n        return {errMsg: error.toString()}\n      }\n\n\n    componentDidCatch(err,info)\n    {\n        // this.setState({\n        //     isError:true\n        // });\n        // console.log('error ',err);\n        // console.log('info',info);\n        console.log(err.toString(), info.componentStack)\n\n    }\n\n\n\n    render() {\n        if(this.state.errMsg)\n        {\n            // return  <h2>{this.state.errMsg}</h2>\n            return <div>\n                <h1>something wrong</h1>\n            </div>\n        }\n        return this.props.children\n    }\n\n};\n\n\nexport default Compo1;","\nimport React, { Component } from 'react'\n\n class compo2 extends Component {\n     constructor(props) {\n         super(props)\n\n     }\n\n\n    render() {\n        if(this.props.data==='myData')\n        {\n             throw new Error('data is invalid')\n        }\n\n        return (\n            <div>\n                data value is {this.props.data}\n            </div>\n        )\n      \n      \n    }\n}\n\nexport default compo2\n","import React from 'react';\nimport  './comp-1.css';\nimport Axios from 'axios';\nimport ErrorBound from './compo1';\nimport Comp2 from './compo2';\n\n\n    class TodoApp extends React.Component {\n      constructor() {\n        super();\n        this.state = {\n          emps: [],\n          currentPage: 1,\n          dataPerPage: 5\n        };\n        this.handleClick = this.handleClick.bind(this);\n      }\n\n      handleClick(event) {\n        this.setState({\n          currentPage: Number(event.target.id)\n        });\n      }\n\n\n      componentWillMount()\n      {\n        Axios.get('http://localhost:5600/emp/').then((result)=>\n              \n        {\n            this.setState(\n                {\n                    emps: result.data\n                }\n            )\n        })\n\n      }\n\n      render() {\n        const { emps, currentPage, dataPerPage } = this.state;\n\n        const indexOfLastTodo = currentPage * dataPerPage;\n        const indexOfFirstTodo = indexOfLastTodo - dataPerPage;\n        const currentTodos = emps.slice(indexOfFirstTodo, indexOfLastTodo);\n\n        const renderTodos = currentTodos.map((emp, index) => {\n            \n            \n          return   <div className=\"container\">\n        \n    <div className=\"panel panel-default\">\n            \n            <div>\n   \n   </div>\n            <div className=\"panel-body\">\n                <table padding='2' class=\"table table-stripe\">\n                    <thead>\n                        <tr style={{ color: 'DarkOrchid' }}>\n                            <th>Emp Name</th>\n                            <th>Emp Email</th>\n                        </tr>\n                        <p></p>\n                    </thead>\n                    <tbody>\n                            <tr style={{ color: 'brown' }} key={emp._id} >\n                                <td>{emp.empName}</td>\n                                <td >{emp.empEmail}</td>\n                            </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n       \n    </div>\n         \n        });\n\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(emps.length / dataPerPage); i++) {\n          pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n          return (\n            <button\n              key={number}\n              id={number}\n              onClick={this.handleClick}\n            >\n              {number}\n              <br></br>\n            </button>\n          );\n        });\n\n        return (\n          <div>\n            <ul>\n              {renderTodos}\n            </ul>\n            <ul id=\"page-numbers\">\n              {renderPageNumbers}\n            </ul>\n            <ErrorBound>\n            <Comp2 data='mydatas'></Comp2>\n            </ErrorBound>\n\n            <ErrorBound>\n            <Comp2 data='myData'></Comp2>\n            </ErrorBound>\n           \n           \n          </div>\n\n        );\n      }\n    }\n\n\n    // ReactDOM.render(\n    //   <TodoApp />,\n    //   document.getElementById('app')\n    // );\n\n    export default TodoApp;"],"sourceRoot":""}