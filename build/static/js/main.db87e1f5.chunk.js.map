{"version":3,"sources":["serviceWorker.js","components/functional/buttonFunctionl.js","components/HocComponent.js","components/ref/refComponent3.js","components/ref/refComponent2.js","components/ref/refComponent.js","components/fragment/fragmentChild.js","components/hoc1.js","components/fragment/fragment.js","components/hoc2.js","components/uncontrolled/unControlledForm.js","components/propsValidation/propsValidation.js","components/propsValidation/propParent.js","components/context/contextFile.js","components/context/contextGrandChildConsumer.js","components/context/contextConsumer.js","components/context/contextProvider.js","components/context/formContext.js","components/context/formConsumer.js","components/context/formProvider.js","components/propRender.js","index.js"],"names":["Boolean","window","location","hostname","match","CallFromHere","click","type","onClick","defaultProps","console","log","ButtonFunc","ComposedComponent","Ref3","React","Component","MyRefComponent","forwardRef","props","ref","htmlFor","name","value","data","placeholder","RefComponent","state","counter","firstRef","createRef","inputRef","cbInRef","Element","myHandler","bind","e","this","preventDefault","focus","setState","fragmentChild","id","map","item","Fragment","key","MyCom","age","NewCom","stateData","unControlledForm","Com1","onButtonHandle","txtBoxRef","fileREf","alert","current","files","propsValidation","count","propParent","onChangeInput","onClickHandler","onChangeInputName","target","onChange","createContext","Provider","Consumer","grandChildFunc","context","names","consumerFunc","pushData","popData","ContextProvider","onButtonClick","newArr","push","concat","onRemoveClick","pop","FormContext","FormConsumer","user","useContext","useState","myName","setName","onData","onData1","style","color","formConsumer","onDataChange","onDataChange1","propRender","incrementCount","decrementCount","render","App","lazy","Display","Add","Edit","Delete","Query","Filter","EmpView","Paginate","PageEmp","routing","Suspense","fallback","className","aria-current","class","href","exact","path","component","RefCom","UnControlled","ContextComp","RenderPropCo","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.db87e1f5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst ButtonFunc=()=>\n{\n    const newFunc=()=>\n    {\n        console.log('click from button function.')\n    };\n\n    return(\n    <CallFromHere click={newFunc}></CallFromHere>\n    // <\n    );\n\n};\n\n\n\nconst CallFromHere=({click})=>\n{\n    return(\n        <div>\n            <p>\n                <button type='button'  onClick={click} >Button</button>\n            </p>\n        </div>\n    )\n\n\n\n};\nCallFromHere.defaultProps = {\n    click: () => console.log('Default'),\n  };\n\n\nexport default ButtonFunc;","import React, { Component } from 'react';\nimport Com1 from './hoc1'\nimport Com2 from './hoc2';\n\nconst HOCCom=  (ComposedComponent,New2component) =>class extends React.Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n                data:\"maulik\",\n                id:6,\n                age:21\n        }\n    }\n    componentWillMount()\n    {\n        this.setState({\n            data:'mj '\n        })\n    }\n    \n   \n    render()\n    {\n\n        return (\n            <div>\n                <ComposedComponent \n                    {...this.props}\n                 age={this.state.age}/>\n                \n                 <Com2\n                  {...this.props} id={this.state.id} stateData={this.state}\n                  />\n            </div>\n        )\n\n    }\n        \n};\n\nexport default HOCCom(Com1,Com2);","import React from 'react';\n\n\nclass Ref3 extends React.Component\n{\n\n    render()\n    {\n\n        return(\n            <table>\n                <tbody>\n                    <td>\n                        <div>\n                            hello\n                        </div>\n                    </td>\n                </tbody>\n            </table>\n        )\n    }\n\n};\n\n\nexport default Ref3;","//accessing ref using props\n// import React from 'react';\n\n// class MyRefComponent extends React.Component\n// {\n//     constructor(props) {\n//         super(props)\n//     }\n\n//     render()\n//     {\n//         return(\n//             <div>\n               \n//                  <form>\n//             <label htmlFor=\"name\">Enter Name:</label>\n//             <br></br>\n//         <input type=\"text\" name=\"name\" ref={this.props.myRef} placeholder=\"enter name\"/>\n//         <br>\n//         </br>\n//         </form>\n//             </div>\n           \n//         )\n//     }\n\n// };\n\n// export default MyRefComponent;\n\n\n\n//forward ref from parent component usinf react's forwardRef method\nimport React from 'react';\nimport Ref3Compo from './refComponent3';\n\nconst MyRefComponent =React.forwardRef((props,ref)=>\n{\n    return(\n        <div>\n           <form>\n             <label htmlFor=\"name\">Enter Name:</label>\n             <br></br>\n            <input type=\"text\" name=\"name\" value={props.data} ref={ref} placeholder=\"enter name\"/>\n             <br>\n             </br>\n         </form>\n         <Ref3Compo/>\n             </div>\n    )\n});\n\nexport default MyRefComponent;","import React from 'react'\n\nimport RefCom from './refComponent2';\n\n\nclass RefComponent extends React.Component {\n  \n    constructor(props) {\n        super(props);\n        this.state={\n            counter:0\n        }\n    \n        this.firstRef=React.createRef();// one way to create a ref\n        //second way to create a ref in react is to use callback ref\n        this.inputRef=null;\n        this.cbInRef=(Element)=>\n        {\n            this.inputRef=Element;\n        }\n        this.myHandler=this.myHandler.bind(this);\n    }\n    \n     myHandler(e)\n    {\n        let {counter}=this.state;\n        e.preventDefault();\n        // this.firstRef.current.focus()\n        \n        \n        \n        if(this.inputRef)\n        {\n            this.inputRef.focus();\n        }\n        this.setState({\n            counter:counter+1\n        });\n\n    }\n  \n  render()\n  {\n    return (\n        <div>\n            <form>\n                {/*  passing ref using props to child component */}\n              {/* <RefCom myRef={this.cbInRef}/> */}\n\n\n              {/* passing ref  to child component as forward ref */}\n              <RefCom  ref={this.cbInRef}  data={this.state.counter}/>\n              {/* <RefCom  myRef={this.firstRef} data={this.state.counter}/> */}\n            <button type='button'  onClick={this.myHandler}>Focus</button>\n            </form>\n            <h4>\n                counter is {this.state.counter}\n            </h4>\n        </div>\n    )\n  }\n    \n};\n\nexport default RefComponent;\n\n\n//ref using functional component\n// import React from 'react';\n\n// const RefComponent=()=>\n// {\n//    const myRef = React.useRef(null);\n//    const myHandler=(e)=>\n//    {\n//     e.preventDefault();\n//     myRef.current.focus();\n//    }\n\n//    return(\n//        <div>\n//            <form>\n//                <label>\n//                    Name:\n//                </label>\n//                <br>\n//                </br>\n//              <input type='text' ref={myRef} name='name' placeholder='enter name'/>  \n//              <br>\n//              </br>\n//              <button type='button' style={{color:'brown'}} onClick={myHandler}>Focus</button>\n//            </form>\n//        </div>\n//    )\n\n// };\n\n\n// export default RefComponent;","import React, { Component, Fragment } from 'react'\n\nexport default class fragmentChild extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             data:[\n                 {\n                     name:'maulik',\n                     id:1\n                 },\n                 {\n                     name:'mj',\n                     id:2\n                 }\n             ]\n        }\n    }\n    \n    render() {\n        return (\n            <tr>\n        {this.state.data.map(item => (\n        <React.Fragment key={item.id}>\n            <p> <td>name is: {item.name}</td></p>\n         \n        </React.Fragment>\n      ))}\n    </tr>  \n\n        )\n    }\n}\n","import React from 'react';\n\n\n\nclass MyCom extends React.Component\n{\n\n    constructor(props) {\n        super(props)\n    };\n\n    render()\n    {\n\n        return(\n            <div> data is {this.props.data} \n            <br></br>\n            id is{this.props.id}\n            <p>\n                Age is {this.props.age}\n            </p>\n                </div>\n        )\n    }\n    \n\n}\n\nexport default MyCom;\n","import React, { Component } from 'react';\nimport FragChildCom from './fragmentChild';\n\nexport default class fragment extends Component {\n    render() {\n        return (\n           <table>\n               <tbody>\n                    <FragChildCom/>\n               </tbody>\n           </table>\n        )\n    }\n}\n","import React, { Fragment } from 'react';\n\n\n\nclass NewCom extends React.Component\n{\n    constructor(props) {\n        super(props)\n    };\n\n    render()\n    {\n\n        return(\n            <Fragment>\n                 <div>\n                <div> Name is {this.props.stateData.data} \n                </div>   \n                <div>\n                    age is {this.props.stateData.age}\n                </div>\n                <div>\n                    id is {this.props.id}\n                </div>\n            <br></br>\n          </div>\n            </Fragment>\n           \n        )\n    }\n    \n\n}\n\nexport default NewCom;\n","import React, { Component } from 'react'\n\n\nexport default class unControlledForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n              name:'',\n        }\n        this.onButtonHandle=this.onButtonHandle.bind(this);\n        this.txtBoxRef=React.createRef();\n        this.fileREf=React.createRef()\n\n    }\n    \n    onButtonHandle()\n    {\n        // this.setState({\n        //     name:this.txtBoxRef.current.value,\n        // });\n        alert('file name is'+ ' '+this.fileREf.current.files[0].name)\n    }\n  \n    render() {\n        return (\n            <div>\n                <form>\n                    <label htmlFor=\"name\">Name:</label>\n                    <br>\n                    </br>\n                    <p>\n                        <input type='text' name='name' ref={this.txtBoxRef} placeholder='enter name'/>\n                    </p>\n                    <br>\n                    </br>\n\n\n                    <p>\n                        <input type='file' name='file' ref={this.fileREf} placeholder='upload file'/>\n                    </p>\n                    <br>\n                    </br>\n                   \n                    <button type='button' onClick={this.onButtonHandle} >click here</button>\n                    <div>\n\n                    </div>\n                </form>\n                <div>\n                    Name is: {this.state.name}\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport PropTypes from \"prop-types\";\n const propsValidation = (props) => {\n  \n    return (\n        <div>\n            {console.log(props)}\n            <p>\n            count is   {props.count}\n            </p>\n          <p>\n              name is {props.name}\n          </p>\n        </div>\n    )\n};\n\n\n\n\npropsValidation.propTypes = {\n    count: PropTypes.string.isRequired,\n    name:PropTypes.string.isRequired\n\n\n    //custom validation in react props by making func.\n    // name(props,propName,component)\n    // {\n    //     if(!propName in props)\n    //     {\n    //         throw new Error(`missing ${propName}`);\n    //     }\n    //     if(props[propName].length<5)\n    //     {\n    //         throw new Error(`length of ${propName} must be greate  than 5 characters`);\n    //     }\n    // },\n\n    // count(props,propName,component)\n    // {\n    //     if(!propName in props)\n    //     {\n    //         throw new Error(`missing ${propName}`);\n    //     }\n    //     if(props[propName].length===0)\n    //     {\n    //         throw new Error(`length of ${propName} must be greater than 0`);\n    //     }\n    // }\n  };\n\n  propsValidation.defaultProps={\n\n    name:'maulik j'\n  }\n\nexport default propsValidation;\n","import React, { Component } from 'react'\nimport PropValidateComponent from './propsValidation';\n\nexport default class propParent extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             count:0,\n             name:''\n        };\n        this.onChangeInput=this.onChangeInput.bind(this);\n        this.onClickHandler=this.onClickHandler.bind(this);\n        this.onChangeInputName=this.onChangeInputName.bind(this);\n    };\n\n    onChangeInput(e)\n    {\n        this.setState({\n            count:e.target.value,\n            // name:'mj'\n        })\n    }\n    onChangeInputName(e)\n    {\n\n        this.setState({\n            name:e.target.value\n        })\n    }\n\n    onClickHandler(e)\n    {\n        e.preventDefault();\n    }\n    \n    render() {\n        return (\n            <div>\n                <form>\n                    <label>count:</label>\n                    <input type='number' name='name' onChange={this.onChangeInput}/> \n                    <br>\n                    </br>\n                    <label>name:</label>\n                    <input type='text' name='name' onChange={this.onChangeInputName}/> \n                    <br>\n                    </br>\n                    <button type=\"button\" onClick={this.onClickHandler}>click here</button>   \n                </form>\n                <PropValidateComponent count={this.state.count} name={this.state.name} />\n            </div>\n        )\n    }\n}\n","import { createContext } from \"react\";\n\nconst { Provider, Consumer } = createContext();\n\nexport { Provider, Consumer };","import React from 'react';\nimport {Consumer} from './contextFile' \nconst grandChildFunc=()=>\n{\n  return(\n      <Consumer>\n        {context => (\n        <div>\n            <p>grand child component</p>\n          {context.state.names.map(name => {\n            return (\n              <p id={name.id}>\n                Hi, I am {name.name}, My Id is {name.id} .\n              </p>\n            )\n          })}\n        \n        </div>\n      )}\n      \n      </Consumer>\n        )\n};\n\nexport default grandChildFunc;","import React from 'react';\nimport {Consumer} from './contextFile' \nimport GrandChild from './contextGrandChildConsumer';\n\n\n\nconst consumerFunc=()=>\n{\n  return(\n      <Consumer>\n        {context => (\n        <div>\n            <p>child component</p>\n          {context.state.names.map(name => {\n            return (\n              <p key={name.id}>\n                Hi, I am {name.name} , My Id is {name.id}.\n              </p>\n            )\n          })}\n\n          <form>\n              <button type=\"button\" onClick={context.pushData}>Add name</button>\n              <button type=\"button\" onClick={context.popData}>Remove name</button>\n          </form>\n         <GrandChild/>\n        </div>\n      )}\n     \n\n      </Consumer>\n        )\n};\n\nexport default consumerFunc;","import React from 'react';\nimport ConsumeComp from './contextConsumer';\nimport {Provider} from './contextFile';    \n\nclass ContextProvider extends React.Component\n{\n    constructor(props) {\n        super(props)\n        this.state = {\n             names:[{name:\"maulik\",id:500},{name:'vishal',id:502},{name:'dharmesh',id:503}]\n        };\n        this.onButtonClick=this.onButtonClick.bind(this);\n        this.onRemoveClick=this.onRemoveClick.bind(this);\n    }\n    \n \n\n    onButtonClick=()=>\n    {\n        let newArr=[];\n        newArr.push({name:'mj',id:504});\n        this.setState({\n            names:this.state.names.concat(newArr)\n        })\n    };\n\n    onRemoveClick=()=>\n    {\n        let newArr=[];\n        newArr=this.state.names\n        newArr.pop();\n        // let popArr=[]=newArr.pop()\n        this.setState({\n            names:newArr\n        })\n\n    }\n    \n    render()\n    {\n        return (\n            <Provider value={{state:this.state,pushData:this.onButtonClick,popData:this.onRemoveClick}}>\n                <ConsumeComp/>\n            </Provider>\n          );\n    }\n\n};\n\n\nexport default ContextProvider;\n\n","// import { createContext } from \"react\";\n\n// const { Provider, Consumer } = createContext();\n\n// export { Provider, Consumer };\n\nimport React from 'react';\n\nconst FormContext=React.createContext();\n\n\nexport default FormContext;","// import React, { Component } from 'react';\n// import {Consumer} from './formContext';\n// import context from 'react-bootstrap/esm/AccordionContext';\n\n\n// export default class formConsumer extends Component {\n//     constructor(props) {\n//         super(props)\n//         console.log(props.name)\n//             this.state = {\n//                  name:props.name\n//             }\n//     }\n    \n//     render() {\n//         return (\n//             <Consumer>\n//                 {context=>(\n\n//                     <div>\n//                         <form>\n//                             <label>Name:</label>\n//                             <br></br>\n//                             <input type='text' onChange={context.onData} placeholder='enter name'/>\n//                             <br>\n//                             </br>\n//                             <lable>Age:</lable>\n//                             <br></br>\n//                             <input type='number' onChange={context.onData1} placeholder='enter age'/>\n                           \n//                         </form>\n//                         <div>\n//                             name is: {context.state.name}\n//                             <br>\n//                             </br>\n//                             age is: {context.state.age}\n//                         </div>\n//                     </div>\n\n\n//                 )}\n//             </Consumer>\n           \n//         )\n//     }\n// }\n\n\nimport React, { useContext, useEffect } from 'react';\nimport FormContext from './formContext';\n\nconst FormConsumer =()=>\n{\n    const user=useContext(FormContext);\n    const [myName, setName] = React.useState('');\n    const MyFunc=()=>\n    {\n        setName(user.state.name)\n    };\n\n    return(\n     \n        <div>\n            <form>\n                <label>\n                    Name:\n                </label>\n                <br>\n                </br>\n                <input type='text' name='name' placeholder='enter name' onChange={user.onData}/>\n                <br>\n                </br>\n                <label>\n                    Age:\n                </label>\n                <br>\n                </br>\n                <input type='number' name='age' placeholder='enter age' onChange={user.onData1}/>\n            </form>\n            <p>\n                Name is: {user.state.name}\n            </p>\n            <p>\n                Age is: {user.state.age}\n            </p>\n            <p >\n            state name is :<p style={{color:'brown'}}>{myName}</p>\n            </p>\n            <br>\n            </br>\n                <button type='button' onClick={MyFunc}>update state name</button>\n           \n        </div>\n    )\n};\n\n\nexport default FormConsumer;","  import FormContext from './formContext';\n    import React, { Component } from 'react';\n    import Child from './formConsumer';\n    \n    export class formConsumer extends Component {\n        constructor(props) {\n            super(props)\n        \n            this.state = {\n                 name:'',\n                 age:null\n            };\n            this.onDataChange=this.onDataChange.bind(this);\n            this.onDataChange1=this.onDataChange1.bind(this)\n\n\n            \n        }\n\n        onDataChange=(e)=>\n        {\n        this.setState({name:e.target.value});\n        };\n\n\n        onDataChange1=(e)=>\n        {\n        this.setState({age:e.target.value});\n        };\n\n      \n\n        \n        render() {\n                console.log(this.state)\n            return (\n                    <FormContext.Provider value={{onData:this.onDataChange,onData1:this.onDataChange1,state:this.state}}>\n                        <Child/>\n                    </FormContext.Provider>\n            )\n        }\n    }\n    \n    export default formConsumer\n    ","import React, { Component } from 'react'\n\nexport default class propRender extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             count:0\n        }\n        this.decrementCount=this.decrementCount.bind(this);\n        this.incrementCount=this.incrementCount.bind(this);\n    }\n    incrementCount=()=>\n    {\n     return   this.setState({\n            count:this.state.count+1\n        })\n    }\n\n    decrementCount=()=>\n    {\n      return  this.setState({\n            count:this.state.count+1\n        })\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.props.render({\n                    incrementCount:this.incrementCount,\n                    decrementCount:this.decrementCount,\n                    count:this.state.count\n                })}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import Display from './components/empDisplay';\n// import Add from './components/empAdd';\nimport { Route, Link, NavLink, BrowserRouter as Router } from 'react-router-dom'\n// import Edit from './components/empEdit';\n// import Delete from './components/empDelete';\n// import Search from  './components/search';\n// import Query from './components/query'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Filter from './components/empFilter';\n// import EmpView from './components/empView';\n// import Paginate from './components/empPagination';\nimport Func from './components/functional/addFunctional'\nimport GetFunctional from './components/functional/mountGetFunctional';\nimport RefCom from './components/ref/refComponent';\nimport FragCom from './components/fragment/fragment';\nimport HocCom from './components/HocComponent';\nimport UnControlled from './components/uncontrolled/unControlledForm';\nimport propParent from './components/propsValidation/propParent';\n// import MyContext from './components/contextFile'\nimport ContextComp from './components/context/contextProvider';\nimport FormContext from './components/context/formProvider'\nimport RenderPropCo from './components/propRender'\n\n// lazy components\nconst App = React.lazy(() => import('./App'));\nconst Display=React.lazy(()=>import('./components/display/empDisplay'));\nconst Add=React.lazy(()=>import('./components/add/empAdd'));\nconst Edit=React.lazy(()=>import('./components/edit/empEdit'));\nconst Delete=React.lazy(()=>import('./components/delete/empDelete'));\nconst Query=React.lazy(()=>import('./components/singleView/query'));\nconst Filter=React.lazy(()=>import('./components/search/empFilter'));\nconst EmpView=React.lazy(()=>import('./components/singleView/empView'));\nconst Paginate=React.lazy(()=>import('./components/empPagination'));\nconst PageEmp=React.lazy(()=>import('./components/comp-1'));\n\nlet routing = (\n  <React.Suspense fallback={<div>\n    <p>\n      Menu is loading.\n    </p>\n  </div>}>\n <Router>\n    <div>\n      <div>\n        <ul className=\"header\">\n          {/* {/* <li ><a aria-current=\"true\" class=\"active\" href=\"/\">Home</a></li> */}\n\n          <li ><a aria-current=\"true\" class=\"active\" href=\"/\">Home</a></li>\n           <li><a aria-current=\"true\" class=\"active\" href=\"/add\">Add New Employee</a></li> \n           <li><a aria-current=\"true\" class=\"active\" href=\"/show\">Display Employees</a></li> \n           <li><a aria-current=\"true\" class=\"active\" href=\"/filter\">Search Employee</a></li> \n        <li><a aria-current=\"true\" class=\"active\" href=\"/page\">Pagination</a></li> \n          {/* <li><a aria-current=\"true\" class=\"active\" href=\"/myDemo\">new page</a></li> */}\n          <li><a aria-current=\"true\" class=\"active\" href=\"/myPage\">react pagination</a></li>\n          <li><a aria-current=\"true\" class=\"active\" href=\"/ref\">react ref</a></li>\n          <li><a aria-current=\"true\" class=\"active\" href=\"/uncon\">Uncontrolled</a></li>\n          <li><a aria-current=\"true\" class=\"active\" href=\"/props\">Props Validation</a></li>\n          <li><a aria-current=\"true\" class=\"active\" href=\"/context\">Context </a></li>\n          <li><a aria-current=\"true\" class=\"active\" href=\"/formContext\">Context  Form</a></li>\n          <li><a aria-current=\"true\" class=\"active\" href=\"/rp\">Render Prop</a></li>\n        </ul>\n      </div>\n\n     <Route exact path='/' component={App} />\n       <Route path='/add/' component={Add} />\n      <Route path='/show' component={Display} />\n      <Route path='/edit/:id' component={Edit}/>\n      <Route path='/delete/:id' component={Delete}/>\n      <Route path='/viewById/:id' component={EmpView}/>\n     <Route path='/filter' component={Filter}/>\n      <Route exact path='/view/' component={Query}/>\n      <Route  path='/page/:limit/:pageNo' component={Paginate}/>\n      <Route path='/myPage' component={PageEmp}/>\n      <Route path='/ref/' component={RefCom}/>\n      <Route path='/uncon/' component={UnControlled}/>\n      <Route path='/props/' component={propParent}/>\n      <Route path='/context/' component={ContextComp}/>\n      <Route path='/formContext/' component={FormContext}/>\n      <Route path='/rp/' component={RenderPropCo}/>\n      {/* <Route path='/myDemo' component={NewPagi}></Route> */}\n\n\n   </div>\n  </Router>\n  </React.Suspense>\n \n);\n\n\n\n\n\n\nReactDOM.render( routing,document.getElementById('root')\n);\n\n\n// ReactDOM.render(<Query/>,document.getElementById('root'));\n\n\n// functional component\n// ReactDOM.render(\n//   <GetFunctional/>,document.getElementById('root')\n// )\n\n\n\n// ReactDOM.render(<GetFunctional/>,document.getElementById('root'));\n\n// ReactDOM.render(<FragCom/>,document.getElementById('root'));\n\n\n// ReactDOM.render(<HocCom/>,document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}