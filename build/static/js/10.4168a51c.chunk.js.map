{"version":3,"sources":["components/display/dataLoader.js","components/display/dataNotFound.js","components/display/displayFormLoad.js","components/display/empDisplay.js"],"names":["LoadingSpinner","className","dataNotFound","style","color","DisplayFormLoad","buttonClick","emps","loading","Button","variant","onClick","to","class","aria-hidden","padding","fontSize","length","map","emp","key","_id","empName","empEmail","Display","setState","axios","get","then","res","data","state","bind","this","React","Component"],"mappings":"qNAQeA,EANQ,kBACrB,6BACE,uBAAGC,UAAU,0BADf,gB,oECQaC,EARO,WAClB,OACI,6BACA,iCAAM,4BAAQC,MAAO,CAACC,MAAM,QAAtB,4BC+DCC,EAvDO,SAAC,GACtB,IADuBC,EACxB,EADwBA,YAAYC,EACpC,EADoCA,KAAKC,EACzC,EADyCA,QAEjC,OACI,yBAAKP,UAAU,aACT,yBAAKA,UAAU,cACf,yBAAMA,UAAU,cACtB,kBAACQ,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAASL,GAA3C,gBAKHE,EAAQ,kBAAC,EAAD,MAAmB,yBAAKP,UAAU,uBAC/B,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,eACV,4BAAQE,MAAO,CAAEC,MAAO,SAAxB,oBAGR,8BAGA,yBAAKH,UAAU,cACX,4BAAI,kBAAC,IAAD,CAAMW,GAAG,QAAO,0BAAOC,MAAM,gCAAgCC,cAAY,SAAzE,kBACJ,2BAAOC,QAAQ,IAAIF,MAAM,sBACrB,+BACI,wBAAIV,MAAO,CAAEC,MAAO,eAChB,wCACA,yCACA,4BAAI,kBAAC,IAAD,CAAgBD,MAAO,CAAEa,SAAU,MAAvC,KACA,4BAAI,kBAAC,IAAD,CAAUb,MAAO,CAAEa,SAAU,MAAjC,KACC,4BAAI,kBAAC,IAAD,CAAYb,MAAO,CAAEa,SAAU,QAExC,6BAEJ,+BAEmB,IAAdT,EAAKU,OAAY,kBAAC,EAAD,MAAqBV,EAAKW,KAAI,SAAAC,GAAG,OAC/C,wBAAIhB,MAAO,CAAEC,MAAO,SAAWgB,IAAKD,EAAIE,KACpC,4BAAKF,EAAIG,SACT,4BAAMH,EAAII,UACX,4BAAI,kBAAC,IAAD,CAAMX,GAAI,aAAaO,EAAIE,KAA3B,cACJ,4BAAI,kBAAC,IAAD,CAAMT,GAAI,SAASO,EAAIE,KAAvB,SACJ,4BAAI,kBAAC,IAAD,CAAMT,GAAI,WAAWO,EAAIE,KAAzB,qBClDrCG,E,kDACF,aAAe,IAAD,8BACV,gBAUJb,QAAU,WACN,EAAKc,SAAS,CACVjB,SAAQ,IAEZkB,IAAMC,IAAI,6BACLC,MAAK,SAAAC,GACF,EAAKJ,SAAS,CAAElB,KAAMsB,EAAIC,KAAMtB,SAAS,QAfjD,EAAKuB,MACL,CACIxB,KAAM,GACNC,SAAS,GAEb,EAAKG,QAAQ,EAAKA,QAAQqB,KAAb,gBAPH,E,qDAuBV,OACI,kBAAC,EAAD,CAAYzB,KAAM0B,KAAKF,MAAMxB,KAAMD,YAAa2B,KAAKtB,QAAUH,QAASyB,KAAKF,MAAMvB,c,GAzBzE0B,IAAMC,WAgCbX","file":"static/js/10.4168a51c.chunk.js","sourcesContent":["import React from 'react';\n\nconst LoadingSpinner = () => (\n  <div>\n    <i className=\"fa fa-spinner fa-spin\" /> Loading...\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React from 'react'\n\n\n const dataNotFound = () => {\n    return (\n        <div>\n        <h1>  <center style={{color:'red'}}>Oops ! Data not found</center></h1>            \n        </div>\n    )\n}\n\nexport default dataNotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport LoadingSpinner from './dataLoader'\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport NotFoundComponent from './dataNotFound';\n\n\n//functional components with props handling\nconst DisplayFormLoad=({buttonClick,emps,loading})=>\n{\n        return (\n            <div className=\"container\">\n                  <div className=\"panel-body\">\n                  <div  className=\"panel-body\">\n            <Button variant=\"outline-success\" onClick={buttonClick}>Fetch Data</Button>\n                </div>\n                  </div>\n               \n                \n        {loading?<LoadingSpinner/>: <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\">\n                        <h3 className=\"panel-title\">\n                            <center style={{ color: 'Blue' }}>Show Employees</center>\n                        </h3>\n                    </div>\n                    <div>\n           \n           </div>\n                    <div className=\"panel-body\">\n                        <h4><Link to=\"/add\"><span  class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span> Add Employee</Link></h4>\n                        <table padding='2' class=\"table table-stripe\">\n                            <thead>\n                                <tr style={{ color: 'DarkOrchid' }}>\n                                    <th>Emp Name</th>\n                                    <th>Emp Email</th>\n                                    <th><VisibilityIcon style={{ fontSize: 22 }} /> </th>\n                                    <th><EditIcon style={{ fontSize: 22 }} /> </th>\n                                     <th><DeleteIcon style={{ fontSize: 22 }} /></th>\n                                </tr>\n                                <p></p>\n                            </thead>\n                            <tbody>\n\n                                {emps.length===0 ?<NotFoundComponent/>:emps.map(emp =>\n                                    <tr style={{ color: 'brown' }} key={emp._id} >\n                                        <td>{emp.empName}</td>\n                                        <td >{emp.empEmail}</td>\n                                       <td><Link to={'/viewById/'+emp._id}>View More</Link></td>\n                                       <td><Link to={'/edit/'+emp._id}>Edit</Link></td>\n                                       <td><Link to={'/delete/'+emp._id}>Delete</Link></td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>}\n               \n            </div>\n\n        )\n\n};\n\nexport default DisplayFormLoad;","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport EmpDisplay from './displayFormLoad'\r\n\r\nclass Display extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state =\r\n        {\r\n            emps: [],\r\n            loading: false\r\n        };\r\n        this.onClick=this.onClick.bind(this)\r\n    }\r\n\r\n\r\n    onClick = () => {\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        axios.get('http://localhost:5600/emp')\r\n            .then(res => {\r\n                this.setState({ emps: res.data, loading: false });\r\n            });\r\n      }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <EmpDisplay emps={this.state.emps} buttonClick={this.onClick}  loading={this.state.loading}/>\r\n        )\r\n     \r\n    };\r\n};\r\n\r\n\r\nexport default Display;"],"sourceRoot":""}